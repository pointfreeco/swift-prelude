#if !canImport(ObjectiveC)
import XCTest

extension FreeNearSemiringTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__FreeNearSemiringTests = [
        ("testOp", testOp),
    ]
}

extension KeyPathTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__KeyPathTests = [
        ("testGet", testGet),
        ("testOver", testOver),
        ("testSet", testSet),
    ]
}

extension ParallelTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ParallelTests = [
        ("testAltThreadSafety", testAltThreadSafety),
        ("testApplyThreadSafety", testApplyThreadSafety),
        ("testParallel", testParallel),
        ("testRace", testRace),
        ("testSequenceThreadSafety", testSequenceThreadSafety),
    ]
}

extension SequenceTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SequenceTests = [
        ("testCatOptionals", testCatOptionals),
        ("testConcat", testConcat),
        ("testIntersperse", testIntersperse),
        ("testMapOptional", testMapOptional),
    ]
}

extension StringTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__StringTests = [
        ("testJoined", testJoined),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(FreeNearSemiringTests.__allTests__FreeNearSemiringTests),
        testCase(KeyPathTests.__allTests__KeyPathTests),
        testCase(ParallelTests.__allTests__ParallelTests),
        testCase(SequenceTests.__allTests__SequenceTests),
        testCase(StringTests.__allTests__StringTests),
    ]
}
#endif
